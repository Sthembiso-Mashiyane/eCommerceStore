{"remainingRequest":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/babel-loader/lib/index.js!/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/eslint-loader/index.js??ref--13-0!/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/src/stores/modules/address.js","dependencies":[{"path":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/src/stores/modules/address.js","mtime":1587720458890},{"path":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvc3RoZW1iaXNvbWFzaGl5YW5lL1dlYnN0b3JtUHJvamVjdHMvdnVlanMtZmlyZWJhc2Utc2hvcHBpbmctY2FydC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUtY29yZWpzMi9oZWxwZXJzL2VzbS9kZWZpbmVQcm9wZXJ0eSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKaW1wb3J0IHsgZGIgfSBmcm9tICIuLi8uLi9jb25maWcvZmlyZWJhc2VDb25maWciOwp2YXIgc3RhdGUgPSB7CiAgaXNBZGRyZXNzZXNMb2FkaW5nOiB0cnVlLAogIGFkZHJlc3NlczogW10KfTsKdmFyIG11dGF0aW9ucyA9IHsKICAnU0VUX1VTRVJfQUREUkVTU0VTJzogZnVuY3Rpb24gU0VUX1VTRVJfQUREUkVTU0VTKHN0YXRlLCBhZGRyZXNzZXMpIHsKICAgIHN0YXRlLmFkZHJlc3NlcyA9IGFkZHJlc3NlczsKICAgIHN0YXRlLmlzQWRkcmVzc2VzTG9hZGluZyA9IGZhbHNlOwogIH0sCiAgJ1NFVF9VU0VSX1NFTEVDVEVEX1VTRVJfQUREUkVTUyc6IGZ1bmN0aW9uIFNFVF9VU0VSX1NFTEVDVEVEX1VTRVJfQUREUkVTUyhzdGF0ZSwgcHJvZHVjdExpc3QpIHsKICAgIHN0YXRlLnVzZXJBZGRyZXNzID0gcHJvZHVjdExpc3Q7CiAgICBzdGF0ZS5pc0FkZHJlc3NMb2FkaW5nID0gZmFsc2U7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBnZXRBZGRyZXNzZXM6IGZ1bmN0aW9uIGdldEFkZHJlc3NlcyhfcmVmLCB1aWQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIHN0YXRlLmlzQWRkcmVzc2VzTG9hZGluZyA9IHRydWU7CiAgICByZXR1cm4gZGIuY29sbGVjdGlvbigidXNlcnMiKS5kb2ModWlkKS5jb2xsZWN0aW9uKCdhZGRyZXNzZXMnKS5vblNuYXBzaG90KGZ1bmN0aW9uIChhZGRyZXNzZXMpIHsKICAgICAgdmFyIHRvU2VuZCA9IFtdOwogICAgICBhZGRyZXNzZXMuZm9yRWFjaChmdW5jdGlvbiAoZG9jKSB7CiAgICAgICAgdmFyIHRvQWRkID0gX29iamVjdFNwcmVhZCh7CiAgICAgICAgICBpZDogZG9jLmlkCiAgICAgICAgfSwgZG9jLmRhdGEoKSk7CgogICAgICAgIHRvU2VuZC5wdXNoKHRvQWRkKTsKICAgICAgfSk7CiAgICAgIGNvbnNvbGUubG9nKHRvU2VuZCk7CiAgICAgIGNvbW1pdCgnU0VUX1VTRVJfQUREUkVTU0VTJywgdG9TZW5kKTsKICAgIH0pOwogIH0sCiAgZ2V0QWRkcmVzc0J5QWRkcmVzc0lEOiBmdW5jdGlvbiBnZXRBZGRyZXNzQnlBZGRyZXNzSUQoX3JlZjIsIF9yZWYzKSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgdmFyIHVpZCA9IF9yZWYzLnVpZCwKICAgICAgICBhZGRyZXNzSUQgPSBfcmVmMy5hZGRyZXNzSUQ7CiAgICBzdGF0ZS51c2VyTG9hZGluZyA9IHRydWU7CiAgICByZXR1cm4gZGIuY29sbGVjdGlvbigidXNlcnMiKS5kb2ModWlkKS5jb2xsZWN0aW9uKCdhZGRyZXNzZXMnKS5kb2MoYWRkcmVzc0lEKS5vblNuYXBzaG90KGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgIHZhciB0b1NlbmQgPSB1c2VyLmRhdGEoKTsKICAgICAgY29uc29sZS5sb2codG9TZW5kKTsKICAgICAgY29tbWl0KCdTRVRfVVNFUl9TRUxFQ1RFRF9VU0VSX0FERFJFU1MnLCB0b1NlbmQpOwogICAgfSk7CiAgfSwKICBlZGl0QWRkcmVzc0J5QWRkcmVzc0lEOiBmdW5jdGlvbiBlZGl0QWRkcmVzc0J5QWRkcmVzc0lEKF9yZWY0LCBfcmVmNSkgewogICAgdmFyIGNvbW1pdCA9IF9yZWY0LmNvbW1pdDsKICAgIHZhciB1aWQgPSBfcmVmNS51aWQsCiAgICAgICAgYWRkcmVzcyA9IF9yZWY1LmFkZHJlc3M7CiAgICBjb25zb2xlLmxvZyhjb21taXQpOwogICAgcmV0dXJuIGRiLmNvbGxlY3Rpb24oInVzZXJzIikuZG9jKHVpZCkuY29sbGVjdGlvbignYWRkcmVzc2VzJykuZG9jKGFkZHJlc3MuaWQpLnVwZGF0ZSh7CiAgICAgIHN0cmVldEFkZHJlc3M6IGFkZHJlc3Muc3RyZWV0QWRkcmVzcywKICAgICAgc3VidXJiOiBhZGRyZXNzLnN1YnVyYiwKICAgICAgY2l0eTogYWRkcmVzcy5jaXR5LAogICAgICBwcm92aW5jZTogYWRkcmVzcy5wcm92aW5jZSwKICAgICAgcG9zdGFsQ29kZTogYWRkcmVzcy5wb3N0YWxDb2RlCiAgICB9KTsKICB9LAogIHNhdmVBZGRyZXNzOiBmdW5jdGlvbiBzYXZlQWRkcmVzcyhfcmVmNiwgX3JlZjcpIHsKICAgIHZhciBjb21taXQgPSBfcmVmNi5jb21taXQ7CiAgICB2YXIgdWlkID0gX3JlZjcudWlkLAogICAgICAgIGFkZHJlc3NPYmplY3QgPSBfcmVmNy5hZGRyZXNzT2JqZWN0OwogICAgY29uc29sZS5sb2coY29tbWl0KTsKICAgIGNvbnNvbGUubG9nKHVpZCk7CiAgICBjb25zb2xlLmxvZyhhZGRyZXNzT2JqZWN0KTsKICAgIHJldHVybiBkYi5jb2xsZWN0aW9uKCJ1c2VycyIpLmRvYyh1aWQpLmNvbGxlY3Rpb24oImFkZHJlc3NlcyIpLmFkZCh7CiAgICAgIHN0cmVldEFkZHJlc3M6IGFkZHJlc3NPYmplY3Quc3RyZWV0QWRkcmVzcywKICAgICAgc3VidXJiOiBhZGRyZXNzT2JqZWN0LnN1YnVyYiwKICAgICAgY2l0eTogYWRkcmVzc09iamVjdC5jaXR5LAogICAgICBwcm92aW5jZTogYWRkcmVzc09iamVjdC5wcm92aW5jZSwKICAgICAgcG9zdGFsQ29kZTogYWRkcmVzc09iamVjdC5wb3N0YWxDb2RlCiAgICB9KTsKICB9LAogIGRlbGV0ZUFkZHJlc3M6IGZ1bmN0aW9uIGRlbGV0ZUFkZHJlc3MoX3JlZjgsIF9yZWY5KSB7CiAgICB2YXIgY29tbWl0ID0gX3JlZjguY29tbWl0OwogICAgdmFyIHVpZCA9IF9yZWY5LnVpZCwKICAgICAgICBhZGRyZXNzID0gX3JlZjkuYWRkcmVzczsKICAgIGRiLmNvbGxlY3Rpb24oInVzZXJzIikuZG9jKHVpZCkuY29sbGVjdGlvbigiYWRkcmVzc2VzIikuZG9jKGFkZHJlc3MuaWQpLmRlbGV0ZSgpLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICBjb25zb2xlLmxvZyhjb21taXQpOwogICAgICBjb25zb2xlLmxvZygiRG9jdW1lbnQgc3VjY2Vzc2Z1bGx5IGRlbGV0ZWQhIik7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgdGhyb3cgZXJyb3I7CiAgICB9KTsKICB9Cn07CnZhciBnZXR0ZXJzID0gewogIGFkZHJlc3NlczogZnVuY3Rpb24gYWRkcmVzc2VzKHN0YXRlKSB7CiAgICByZXR1cm4gc3RhdGUuYWRkcmVzc2VzOwogIH0sCiAgaXNBZGRyZXNzZXNMb2FkaW5nOiBmdW5jdGlvbiBpc0FkZHJlc3Nlc0xvYWRpbmcoc3RhdGUpIHsKICAgIHJldHVybiBzdGF0ZS5pc0FkZHJlc3Nlc0xvYWRpbmc7CiAgfQp9OwpleHBvcnQgZGVmYXVsdCB7CiAgc3RhdGU6IHN0YXRlLAogIG11dGF0aW9uczogbXV0YXRpb25zLAogIGFjdGlvbnM6IGFjdGlvbnMsCiAgZ2V0dGVyczogZ2V0dGVycwp9Ow=="},{"version":3,"sources":["/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/src/stores/modules/address.js"],"names":["db","state","isAddressesLoading","addresses","mutations","productList","userAddress","isAddressLoading","actions","getAddresses","uid","commit","collection","doc","onSnapshot","toSend","forEach","toAdd","id","data","push","console","log","getAddressByAddressID","addressID","userLoading","user","editAddressByAddressID","address","update","streetAddress","suburb","city","province","postalCode","saveAddress","addressObject","add","deleteAddress","delete","then","catch","error","getters"],"mappings":"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","sourcesContent":["import {db} from \"../../config/firebaseConfig\";\n\nconst state = {\n    isAddressesLoading: true,\n    addresses: []\n}\n\nconst mutations = {\n    'SET_USER_ADDRESSES'(state, addresses) {\n        state.addresses = addresses;\n        state.isAddressesLoading = false;\n    },\n    'SET_USER_SELECTED_USER_ADDRESS'(state, productList) {\n        state.userAddress = productList;\n        state.isAddressLoading = false;\n    }\n\n}\n\nconst actions = {\n    getAddresses({commit}, uid) {\n        state.isAddressesLoading = true\n        return db.collection(\"users\").doc(uid).collection('addresses').onSnapshot(addresses => {\n            const toSend = []\n            addresses.forEach(function(doc) {\n                const toAdd = {\n                    id: doc.id,\n                    ...doc.data()\n                }\n                toSend.push(toAdd);\n            });\n            console.log(toSend);\n            commit('SET_USER_ADDRESSES', toSend);\n        })\n    },\n    getAddressByAddressID({commit}, {uid, addressID}) {\n        state.userLoading = true\n        return db.collection(\"users\").doc(uid).collection('addresses').doc(addressID).onSnapshot(user => {\n            const toSend = user.data();\n            console.log(toSend);\n            commit('SET_USER_SELECTED_USER_ADDRESS', toSend);\n        })\n    },\n    editAddressByAddressID({commit}, {uid, address}) {\n        console.log(commit)\n        return db.collection(\"users\").doc(uid).collection('addresses').doc(address.id).update({\n            streetAddress: address.streetAddress,\n            suburb: address.suburb,\n            city: address.city,\n            province: address.province,\n            postalCode: address.postalCode\n        })\n    },\n    saveAddress({commit}, {uid, addressObject}) {\n        console.log(commit);\n        console.log(uid);\n        console.log(addressObject);\n\n        return db.collection(\"users\").doc(uid).collection(\"addresses\").add({\n            streetAddress: addressObject.streetAddress,\n            suburb: addressObject.suburb,\n            city: addressObject.city,\n            province: addressObject.province,\n            postalCode: addressObject.postalCode,\n\n        })\n    },\n    deleteAddress({commit},{uid, address}) {\n        db.collection(\"users\").doc(uid).collection(\"addresses\").doc(address.id).delete().then(function() {\n            console.log(commit);\n            console.log(\"Document successfully deleted!\");\n        }).catch(function(error) {\n            throw error\n        });\n    }\n}\n\nconst getters = {\n    addresses: (state) => {\n        return state.addresses;\n    },\n    isAddressesLoading: (state) => {\n        return state.isAddressesLoading;\n    }\n}\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}\n"]}]}