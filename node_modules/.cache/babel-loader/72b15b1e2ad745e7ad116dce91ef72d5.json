{"remainingRequest":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/babel-loader/lib/index.js!/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/eslint-loader/index.js??ref--13-0!/Users/sthembisomashiyane/WebstormProjects/dripy/src/stores/modules/brand.js","dependencies":[{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/src/stores/modules/brand.js","mtime":1588152544580},{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/cache-loader/dist/cjs.js","mtime":1587899238127},{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/babel-loader/lib/index.js","mtime":1587899237742},{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/eslint-loader/index.js","mtime":1587899238895}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM3Lm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXM2Lm9iamVjdC5rZXlzIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICIvVXNlcnMvc3RoZW1iaXNvbWFzaGl5YW5lL1dlYnN0b3JtUHJvamVjdHMvZHJpcHkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lLWNvcmVqczIvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLml0ZXJhYmxlIjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmltcG9ydCB7IGRiIH0gZnJvbSAiLi4vLi4vY29uZmlnL2ZpcmViYXNlQ29uZmlnIjsKdmFyIHN0YXRlID0gewogIGlzQnJhbmRMb2FkaW5nOiBmYWxzZSwKICBicmFuZDogJycKfTsKdmFyIG11dGF0aW9ucyA9IHsKICAnU0VUX0JSQU5EJzogZnVuY3Rpb24gU0VUX0JSQU5EKHN0YXRlLCBicmFuZCkgewogICAgc3RhdGUuYnJhbmQgPSBicmFuZDsKICAgIHN0YXRlLmlzQnJhbmRMb2FkaW5nID0gZmFsc2U7CiAgfQp9Owp2YXIgYWN0aW9ucyA9IHsKICBnZXRCcmFuZERvY1JlZmVyZW5jZUJlZm9yZVNhdmU6IGZ1bmN0aW9uIGdldEJyYW5kRG9jUmVmZXJlbmNlQmVmb3JlU2F2ZSgpIHsKICAgIHJldHVybiBkYi5jb2xsZWN0aW9uKCJicmFuZHMiKS5kb2MoKTsKICB9LAogIGdldEJyYW5kOiBmdW5jdGlvbiBnZXRCcmFuZChfcmVmLCB1aWQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmLmNvbW1pdDsKICAgIHN0YXRlLmlzQWRkcmVzc2VzTG9hZGluZyA9IHRydWU7CiAgICByZXR1cm4gZGIuY29sbGVjdGlvbigiYnJhbmRzIikuZG9jKHVpZCkuY29sbGVjdGlvbignYWRkcmVzc2VzJykub25TbmFwc2hvdChmdW5jdGlvbiAoYWRkcmVzc2VzKSB7CiAgICAgIHZhciB0b1NlbmQgPSBbXTsKICAgICAgYWRkcmVzc2VzLmZvckVhY2goZnVuY3Rpb24gKGRvYykgewogICAgICAgIHZhciB0b0FkZCA9IF9vYmplY3RTcHJlYWQoewogICAgICAgICAgaWQ6IGRvYy5pZAogICAgICAgIH0sIGRvYy5kYXRhKCkpOwoKICAgICAgICB0b1NlbmQucHVzaCh0b0FkZCk7CiAgICAgIH0pOwogICAgICBjb21taXQoJ1NFVF9VU0VSX0FERFJFU1NFUycsIHRvU2VuZCk7CiAgICB9KTsKICB9LAogIHNhdmVCcmFuZDogZnVuY3Rpb24gc2F2ZUJyYW5kKF9yZWYyLCBicmFuZE9iamVjdCkgewogICAgdmFyIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgIGRiLmNvbGxlY3Rpb24oImJyYW5kcyIpLmRvYyhicmFuZE9iamVjdC5kb2NJRCkuc2V0KHsKICAgICAgYnJhbmRJRDogYnJhbmRPYmplY3QuZG9jSUQsCiAgICAgIGJyYW5kTmFtZTogYnJhbmRPYmplY3QuYnJhbmROYW1lLAogICAgICBicmFuZFRlbE51bWJlcjogYnJhbmRPYmplY3QuYnJhbmRUZWxOdW1iZXIsCiAgICAgIGJyYW5kRW1haWw6IGJyYW5kT2JqZWN0LmJyYW5kRW1haWwsCiAgICAgIGJyYW5kRGVzY3JpcHRpb246IGJyYW5kT2JqZWN0LmJyYW5kRGVzY3JpcHRpb24sCiAgICAgIGxvZ29VUkw6IGJyYW5kT2JqZWN0LmxvZ29VUkwsCiAgICAgIG93bmVySUQ6IGJyYW5kT2JqZWN0Lm93bmVySUQsCiAgICAgIHZlcmlmaWVkOiBicmFuZE9iamVjdC52ZXJpZmllZAogICAgfSk7CiAgICBjb21taXQoJycpOwogIH0sCiAgZ2V0QnJhbmRCeUlEOiBmdW5jdGlvbiBnZXRCcmFuZEJ5SUQoX3JlZjMsIG93bmVySUQpIHsKICAgIHZhciBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICBjb25zb2xlLmxvZyhjb21taXQpOwogICAgcmV0dXJuIGRiLmNvbGxlY3Rpb24oImJyYW5kcyIpLndoZXJlKCdvd25lcklEJywgJz09Jywgb3duZXJJRCkub25TbmFwc2hvdChmdW5jdGlvbiAocmVzKSB7CiAgICAgIGNvbW1pdCgnJyk7CiAgICB9KTsKICB9Cn07CnZhciBnZXR0ZXJzID0ge307CmV4cG9ydCBkZWZhdWx0IHsKICBzdGF0ZTogc3RhdGUsCiAgbXV0YXRpb25zOiBtdXRhdGlvbnMsCiAgYWN0aW9uczogYWN0aW9ucywKICBnZXR0ZXJzOiBnZXR0ZXJzCn07"},{"version":3,"sources":["/Users/sthembisomashiyane/WebstormProjects/dripy/src/stores/modules/brand.js"],"names":["db","state","isBrandLoading","brand","mutations","actions","getBrandDocReferenceBeforeSave","collection","doc","getBrand","uid","commit","isAddressesLoading","onSnapshot","addresses","toSend","forEach","toAdd","id","data","push","saveBrand","brandObject","docID","set","brandID","brandName","brandTelNumber","brandEmail","brandDescription","logoURL","ownerID","verified","getBrandByID","console","log","where","res","getters"],"mappings":";;;;;;;;;AAAA,SAAQA,EAAR;AAEA,IAAMC,KAAK,GAAG;AACVC,EAAAA,cAAc,EAAE,KADN;AAEVC,EAAAA,KAAK,EAAE;AAFG,CAAd;AAKA,IAAMC,SAAS,GAAG;AACd,aADc,qBACFH,KADE,EACKE,KADL,EACY;AACtBF,IAAAA,KAAK,CAACE,KAAN,GAAcA,KAAd;AACAF,IAAAA,KAAK,CAACC,cAAN,GAAuB,KAAvB;AACH;AAJa,CAAlB;AAOA,IAAMG,OAAO,GAAG;AACZC,EAAAA,8BADY,4CACqB;AAC7B,WAAON,EAAE,CAACO,UAAH,CAAc,QAAd,EAAwBC,GAAxB,EAAP;AACH,GAHW;AAIZC,EAAAA,QAJY,0BAIOC,GAJP,EAIY;AAAA,QAAdC,MAAc,QAAdA,MAAc;AACpBV,IAAAA,KAAK,CAACW,kBAAN,GAA2B,IAA3B;AACA,WAAOZ,EAAE,CAACO,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4BE,GAA5B,EAAiCH,UAAjC,CAA4C,WAA5C,EAAyDM,UAAzD,CAAoE,UAAAC,SAAS,EAAI;AACpF,UAAMC,MAAM,GAAG,EAAf;AACAD,MAAAA,SAAS,CAACE,OAAV,CAAkB,UAAUR,GAAV,EAAe;AAC7B,YAAMS,KAAK;AACPC,UAAAA,EAAE,EAAEV,GAAG,CAACU;AADD,WAEJV,GAAG,CAACW,IAAJ,EAFI,CAAX;;AAIAJ,QAAAA,MAAM,CAACK,IAAP,CAAYH,KAAZ;AACH,OAND;AAOAN,MAAAA,MAAM,CAAC,oBAAD,EAAuBI,MAAvB,CAAN;AACH,KAVM,CAAP;AAWH,GAjBW;AAkBZM,EAAAA,SAlBY,4BAkBQC,WAlBR,EAkBqB;AAAA,QAAtBX,MAAsB,SAAtBA,MAAsB;AAC7BX,IAAAA,EAAE,CAACO,UAAH,CAAc,QAAd,EAAwBC,GAAxB,CAA4Bc,WAAW,CAACC,KAAxC,EAA+CC,GAA/C,CAAmD;AAC/CC,MAAAA,OAAO,EAAEH,WAAW,CAACC,KAD0B;AAE/CG,MAAAA,SAAS,EAAEJ,WAAW,CAACI,SAFwB;AAG/CC,MAAAA,cAAc,EAAEL,WAAW,CAACK,cAHmB;AAI/CC,MAAAA,UAAU,EAAEN,WAAW,CAACM,UAJuB;AAK/CC,MAAAA,gBAAgB,EAAEP,WAAW,CAACO,gBALiB;AAM/CC,MAAAA,OAAO,EAAER,WAAW,CAACQ,OAN0B;AAO/CC,MAAAA,OAAO,EAAET,WAAW,CAACS,OAP0B;AAQ/CC,MAAAA,QAAQ,EAAEV,WAAW,CAACU;AARyB,KAAnD;AAUArB,IAAAA,MAAM,CAAC,EAAD,CAAN;AACH,GA9BW;AA+BZsB,EAAAA,YA/BY,+BA+BWF,OA/BX,EA+BoB;AAAA,QAAlBpB,MAAkB,SAAlBA,MAAkB;AAC5BuB,IAAAA,OAAO,CAACC,GAAR,CAAYxB,MAAZ;AACA,WAAOX,EAAE,CAACO,UAAH,CAAc,QAAd,EAAwB6B,KAAxB,CAA8B,SAA9B,EAAyC,IAAzC,EAA+CL,OAA/C,EAAwDlB,UAAxD,CAAmE,UAAAwB,GAAG,EAAI;AAC7E1B,MAAAA,MAAM,CAAC,EAAD,CAAN;AACH,KAFM,CAAP;AAGH;AApCW,CAAhB;AAuCA,IAAM2B,OAAO,GAAG,EAAhB;AAEA,eAAe;AACXrC,EAAAA,KAAK,EAALA,KADW;AAEXG,EAAAA,SAAS,EAATA,SAFW;AAGXC,EAAAA,OAAO,EAAPA,OAHW;AAIXiC,EAAAA,OAAO,EAAPA;AAJW,CAAf","sourcesContent":["import {db} from \"../../config/firebaseConfig\";\n\nconst state = {\n    isBrandLoading: false,\n    brand: ''\n}\n\nconst mutations = {\n    'SET_BRAND'(state, brand) {\n        state.brand = brand;\n        state.isBrandLoading = false;\n    },\n}\n\nconst actions = {\n    getBrandDocReferenceBeforeSave() {\n        return db.collection(\"brands\").doc();\n    },\n    getBrand({commit}, uid) {\n        state.isAddressesLoading = true\n        return db.collection(\"brands\").doc(uid).collection('addresses').onSnapshot(addresses => {\n            const toSend = []\n            addresses.forEach(function (doc) {\n                const toAdd = {\n                    id: doc.id,\n                    ...doc.data()\n                }\n                toSend.push(toAdd);\n            });\n            commit('SET_USER_ADDRESSES', toSend);\n        })\n    },\n    saveBrand({commit}, brandObject) {\n        db.collection(\"brands\").doc(brandObject.docID).set({\n            brandID: brandObject.docID,\n            brandName: brandObject.brandName,\n            brandTelNumber: brandObject.brandTelNumber,\n            brandEmail: brandObject.brandEmail,\n            brandDescription: brandObject.brandDescription,\n            logoURL: brandObject.logoURL,\n            ownerID: brandObject.ownerID,\n            verified: brandObject.verified\n        })\n        commit('',);\n    },\n    getBrandByID({commit}, ownerID) {\n        console.log(commit);\n        return db.collection(\"brands\").where('ownerID', '==', ownerID).onSnapshot(res => {\n            commit('')\n        })\n    }\n}\n\nconst getters = {}\n\nexport default {\n    state,\n    mutations,\n    actions,\n    getters\n}\n"]}]}