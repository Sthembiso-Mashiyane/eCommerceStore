{"remainingRequest":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/babel-loader/lib/index.js!/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/eslint-loader/index.js??ref--13-0!/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/src/stores/actions.js","dependencies":[{"path":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/src/stores/actions.js","mtime":1587546461328},{"path":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/sthembisomashiyane/WebstormProjects/vuejs-firebase-shopping-cart/src/stores/actions.js"],"names":["firebaseAuth","db","moment","firebase","updateCart","commit","item","quantity","isAdd","message_obj","message","title","messageClass","autoClose","removeItemInCart","registerByEmail","email","password","displayName","firstName","lastName","telNum","console","log","createUserWithEmailAndPassword","then","res","collection","doc","user","uid","set","telNumber","catch","error","loginWithGoogle","provider","auth","GoogleAuthProvider","signInWithPopup","async","result","get","exists","phoneNumber","addedByGoogleAuth","logout","signOut","loginWithEmail","_","signInWithEmailAndPassword","listenToProductList","onSnapshot","products","toSend","forEach","push","data","getShoppingCart","currentCart","cart","length","saveShoppingCart","cartItemList","saveObject","timestamp","unix","saveToTransaction"],"mappings":";;;AAAA,SAAQA,YAAR,EAAsBC,EAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,cAEgC;AAAA,MAD3BC,MAC2B,QAD3BA,MAC2B;AAAA,MAA3BC,IAA2B,SAA3BA,IAA2B;AAAA,MAArBC,QAAqB,SAArBA,QAAqB;AAAA,MAAXC,KAAW,SAAXA,KAAW;AACtD;AACAH,EAAAA,MAAM,CAAC,aAAD,EAAgB;AAACC,IAAAA,IAAI,EAAJA,IAAD;AAAOC,IAAAA,QAAQ,EAARA,QAAP;AAAiBC,IAAAA,KAAK,EAALA;AAAjB,GAAhB,CAAN;;AACA,MAAIA,KAAJ,EAAW;AACP,QAAIC,WAAW,GAAG;AACdC,MAAAA,OAAO,gBAASJ,IAAI,CAACK,KAAd,0BADO;AAEdC,MAAAA,YAAY,EAAE,SAFA;AAGdC,MAAAA,SAAS,EAAE;AAHG,KAAlB;AAKAR,IAAAA,MAAM,CAAC,aAAD,EAAgBI,WAAhB,CAAN;AACH;AACJ,CAbM;AAeP,OAAO,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,eAAsB;AAAA,MAApBT,MAAoB,SAApBA,MAAoB;AAAA,MAAVC,IAAU,SAAVA,IAAU;AAClDD,EAAAA,MAAM,CAAC,kBAAD,EAAqB;AAACC,IAAAA,IAAI,EAAJA;AAAD,GAArB,CAAN;AACH,CAFM;AAIP,OAAO,IAAMS,eAAe;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAQV,YAAAA,MAAR,SAAQA,MAAR;AAAkBW,YAAAA,KAAlB,SAAkBA,KAAlB,EAAyBC,QAAzB,SAAyBA,QAAzB,EAAmCC,WAAnC,SAAmCA,WAAnC,EAAgDC,SAAhD,SAAgDA,SAAhD,EAA2DC,QAA3D,SAA2DA,QAA3D,EAAqEC,MAArE,SAAqEA,MAArE;AAC3BC,YAAAA,OAAO,CAACC,GAAR,CAAYlB,MAAZ;AAD2B;AAAA,mBAErBL,YAAY,CAACwB,8BAAb,CAA4CR,KAA5C,EAAmDC,QAAnD,EAA6DQ,IAA7D;AAAA,kFAAkE,iBAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AACpEJ,wBAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AADoE;AAAA,+BAE9DzB,EAAE,CAAC0B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BF,GAAG,CAACG,IAAJ,CAASC,GAApC,EAAyCC,GAAzC,CAA6C;AAC3Cb,0BAAAA,WAAW,EAAEA,WAD8B;AAE3CF,0BAAAA,KAAK,EAAEA,KAFoC;AAG3CG,0BAAAA,SAAS,EAAEA,SAHgC;AAI3CC,0BAAAA,QAAQ,EAAEA,QAJiC;AAK3CY,0BAAAA,SAAS,EAAEX,MALgC;AAM3CS,0BAAAA,GAAG,EAAEJ,GAAG,CAACG,IAAJ,CAASC;AAN6B,yBAA7C,EAQJL,IARI,CAQC,YAAM;AACT;AACH,yBAVK,EAUHQ,KAVG,CAUG,UAAAC,KAAK,EAAI;AACdZ,0BAAAA,OAAO,CAACC,GAAR,CAAYW,KAAZ;AACA,gCAAMA,KAAN;AACH,yBAbK,CAF8D;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAlE;;AAAA;AAAA;AAAA;AAAA,iBAgBHD,KAhBG,CAgBG,UAAAC,KAAK,EAAI;AACdZ,cAAAA,OAAO,CAACC,GAAR,CAAYW,KAAK,CAACxB,OAAlB;AACA,oBAAMwB,KAAN;AACH,aAnBK,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfnB,eAAe;AAAA;AAAA;AAAA,GAArB;AAwBP,OAAO,IAAMoB,eAAe;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,QADqB,GACV,IAAIjC,QAAQ,CAACkC,IAAT,CAAcC,kBAAlB,EADU;AAAA;AAAA,mBAErBtC,YAAY,CAACuC,eAAb,CAA6BH,QAA7B,EAAuCX,IAAvC,CAA4C,SAASe,KAAT,CAAgBC,MAAhB,EAAwB;AACtE,kBAAMZ,IAAI,GAAGY,MAAM,CAACZ,IAApB;AAEA5B,cAAAA,EAAE,CAAC0B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BC,IAAI,CAACC,GAAhC,EAAqCY,GAArC,GAA2CjB,IAA3C,CAAgD,UAAAC,GAAG,EAAI;AACnD,oBAAGA,GAAG,CAACiB,MAAP,EAAc;AACV;AACH,iBAFD,MAGI;AACA,yBAAO1C,EAAE,CAAC0B,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BC,IAAI,CAACC,GAAhC,EAAqCC,GAArC,CAAyC;AAC5Cb,oBAAAA,WAAW,EAAEW,IAAI,CAACX,WAD0B;AAE5CF,oBAAAA,KAAK,EAAEa,IAAI,CAACb,KAFgC;AAG5CgB,oBAAAA,SAAS,EAAEH,IAAI,CAACe,WAAL,IAAoB,EAHa;AAI5Cd,oBAAAA,GAAG,EAAED,IAAI,CAACC,GAJkC;AAK5Ce,oBAAAA,iBAAiB,EAAE,IALyB;AAM5C1B,oBAAAA,SAAS,EAAG,EANgC;AAO5CC,oBAAAA,QAAQ,EAAG;AAPiC,mBAAzC,CAAP;AASH;AAEJ,eAhBD;AAiBH,aApBK,EAoBHa,KApBG,CAoBG,UAAUC,KAAV,EAAiB;AACtBZ,cAAAA,OAAO,CAACC,GAAR,CAAYW,KAAK,CAACxB,OAAlB;AACA,oBAAMwB,KAAN;AACH,aAvBK,CAFqB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfC,eAAe;AAAA;AAAA;AAAA,GAArB;AA6BP,OAAO,IAAMW,MAAM,GAAG,SAATA,MAAS,SAAc;AAAA,MAAZzC,MAAY,UAAZA,MAAY;AAChCA,EAAAA,MAAM,CAAC,UAAD,EAAa,EAAb,CAAN,CADgC,CACR;;AACxB,SAAOL,YAAY,CAAC+C,OAAb,EAAP;AACH,CAHM;AAKP,OAAO,SAASC,cAAT,CAAwBC,CAAxB,UAA8C;AAAA,MAAlBjC,KAAkB,UAAlBA,KAAkB;AAAA,MAAXC,QAAW,UAAXA,QAAW;AACjD,SAAOjB,YAAY,CAACkD,0BAAb,CAAwClC,KAAxC,EAA+CC,QAA/C,CAAP;AACH;AAED,OAAO,SAASkC,mBAAT,SAAuC;AAAA,MAAT9C,MAAS,UAATA,MAAS;AAC1C,SAAOJ,EAAE,CAAC0B,UAAH,CAAc,UAAd,EAA0ByB,UAA1B,CAAqC,UAAAC,QAAQ,EAAI;AACpD,QAAIC,MAAM,GAAG,EAAb;AACAD,IAAAA,QAAQ,CAACE,OAAT,CAAiB,UAAAjD,IAAI,EAAI;AACrBgD,MAAAA,MAAM,CAACE,IAAP,CAAYlD,IAAI,CAACmD,IAAL,EAAZ;AACH,KAFD;AAGApD,IAAAA,MAAM,CAAC,qBAAD,EAAwBiD,MAAxB,CAAN;AACH,GANM,CAAP;AAOH;AAED,OAAO,SAASI,eAAT,iBAAuD;AAAA,MAA7BrD,MAA6B,UAA7BA,MAA6B;AAAA,MAAnByB,GAAmB,UAAnBA,GAAmB;AAAA,MAAd6B,WAAc,UAAdA,WAAc;;AAC1D,MAAI7B,GAAJ,EAAS;AACL,WAAO7B,EAAE,CAAC0B,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BE,GAA1B,EAA+BY,GAA/B,GAAqCjB,IAArC,CAA0C,UAACmC,IAAD,EAAU;AACvDtC,MAAAA,OAAO,CAACC,GAAR,CAAYqC,IAAI,CAACH,IAAL,EAAZ;;AACA,UAAIG,IAAI,CAACH,IAAL,OAAgB,CAACE,WAAD,IAAgBA,WAAW,CAACE,MAAZ,IAAsB,CAAtD,CAAJ,EAA8D;AAC1DxD,QAAAA,MAAM,CAAC,UAAD,EAAauD,IAAI,CAACH,IAAL,GAAYJ,QAAzB,CAAN;AACH;AACJ,KALM,CAAP;AAMH,GAPD,MAOO,CACH;AACH;AACJ;AAED,OAAO,SAASS,gBAAT,CAA0Bb,CAA1B,UAAkD;AAAA,MAApBnB,GAAoB,UAApBA,GAAoB;AAAA,MAAfiC,YAAe,UAAfA,YAAe;AACrD;AACA;AAEA,MAAIC,UAAU,GAAG;AACbX,IAAAA,QAAQ,EAAEU,YADG;AAEbE,IAAAA,SAAS,EAAE/D,MAAM,GAAGgE,IAAT,EAFE;AAGbpC,IAAAA,GAAG,EAAEA;AAHQ,GAAjB;AAKA,SAAO7B,EAAE,CAAC0B,UAAH,CAAc,MAAd,EAAsBC,GAAtB,CAA0BE,GAA1B,EAA+BC,GAA/B,CAAmCiC,UAAnC,CAAP;AACH,C,CAED;;AACA,OAAO,SAASG,iBAAT,CAA2BlB,CAA3B,UAAmD;AAAA,MAApBnB,GAAoB,UAApBA,GAAoB;AAAA,MAAfiC,YAAe,UAAfA,YAAe;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AAEAzC,EAAAA,OAAO,CAACC,GAAR,CAAYO,GAAZ;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAYwC,YAAZ;AAEH","sourcesContent":["import {firebaseAuth, db} from '../config/firebaseConfig';\nimport moment from \"moment\";\nimport firebase from \"firebase\";\n\nexport const updateCart = ({\n                               commit\n                           }, {item, quantity, isAdd}) => {\n    // TODO: Call service\n    commit('UPDATE_CART', {item, quantity, isAdd});\n    if (isAdd) {\n        let message_obj = {\n            message: `Add ${item.title} to cart successfully`,\n            messageClass: \"success\",\n            autoClose: true\n        }\n        commit('ADD_MESSAGE', message_obj);\n    }\n}\n\nexport const removeItemInCart = ({commit}, {item}) => {\n    commit('REMOVE_CART_ITEM', {item});\n}\n\nexport const registerByEmail = async ({commit}, {email, password, displayName, firstName, lastName, telNum}) => {\n    console.log(commit);\n    await firebaseAuth.createUserWithEmailAndPassword(email, password).then(async (res) => {\n        console.log(res);\n        await db.collection(\"users\").doc(res.user.uid).set({\n                displayName: displayName,\n                email: email,\n                firstName: firstName,\n                lastName: lastName,\n                telNumber: telNum,\n                uid: res.user.uid\n            }\n        ).then(() => {\n            return\n        }).catch(error => {\n            console.log(error);\n            throw error\n        })\n    }).catch(error => {\n        console.log(error.message);\n        throw error;\n    });\n}\n\nexport const loginWithGoogle = async() => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    await firebaseAuth.signInWithPopup(provider).then(function async (result) {\n        const user = result.user;\n\n        db.collection(\"users\").doc(user.uid).get().then(res => {\n            if(res.exists){\n                return\n            }\n            else{\n                return db.collection(\"users\").doc(user.uid).set({\n                    displayName: user.displayName,\n                    email: user.email,\n                    telNumber: user.phoneNumber || '',\n                    uid: user.uid,\n                    addedByGoogleAuth: true,\n                    firstName:  '',\n                    lastName:  '',\n                })\n            }\n\n        })\n    }).catch(function (error) {\n        console.log(error.message);\n        throw error;\n    });\n}\n\n\nexport const logout = ({commit}) => {\n    commit('SET_CART', []); // clear current cart\n    return firebaseAuth.signOut();\n}\n\nexport function loginWithEmail(_, {email, password}) {\n    return firebaseAuth.signInWithEmailAndPassword(email, password);\n}\n\nexport function listenToProductList({commit}) {\n    return db.collection(\"products\").onSnapshot(products => {\n        let toSend = []\n        products.forEach(item => {\n            toSend.push(item.data())\n        })\n        commit('UPDATE_PRODUCT_LIST', toSend);\n    })\n}\n\nexport function getShoppingCart({commit}, {uid, currentCart}) {\n    if (uid) {\n        return db.collection(\"cart\").doc(uid).get().then((cart) => {\n            console.log(cart.data());\n            if (cart.data() && (!currentCart || currentCart.length == 0)) {\n                commit('SET_CART', cart.data().products);\n            }\n        });\n    } else {\n        // console.log(\"User has not logged in\");\n    }\n}\n\nexport function saveShoppingCart(_, {uid, cartItemList}) {\n    // console.log(\"ACTIONS saveShoppingCart\");\n    // console.log(\"CART DATA\", cartItemList);\n\n    let saveObject = {\n        products: cartItemList,\n        timestamp: moment().unix(),\n        uid: uid\n    }\n    return db.collection('cart').doc(uid).set(saveObject);\n}\n\n// Needs Some Thinking\nexport function saveToTransaction(_, {uid, cartItemList}) {\n    // let newTransactionKey = moment().unix();\n    // db.collection('transactions').doc(uid).collection()\n    //\n    // let newTransactionKey = ref.child(\"transactions\").push().key;\n    // var newTransaction = {}\n    // newTransaction['/transactions/' + uid + '/' + newTransactionKey] = cartItemList;\n    // return ref.update(newTransaction);\n\n    console.log(uid);\n    console.log(cartItemList);\n\n}\n"]}]}