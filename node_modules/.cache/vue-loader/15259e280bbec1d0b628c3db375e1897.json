{"remainingRequest":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/sthembisomashiyane/WebstormProjects/dripy/src/components/brand/BrandProfile.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/src/components/brand/BrandProfile.vue","mtime":1588165215999},{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/cache-loader/dist/cjs.js","mtime":1587899238127},{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/babel-loader/lib/index.js","mtime":1587899237742},{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/cache-loader/dist/cjs.js","mtime":1587899238127},{"path":"/Users/sthembisomashiyane/WebstormProjects/dripy/node_modules/vue-loader/lib/index.js","mtime":1587899242029}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7bWF4TGVuZ3RoLCBtaW5MZW5ndGgsIHJlcXVpcmVkfSBmcm9tICJ2dWVsaWRhdGUvbGliL3ZhbGlkYXRvcnMiOwppbXBvcnQgKiBhcyBmaXJlYmFzZSBmcm9tICJmaXJlYmFzZSI7CmltcG9ydCB7bWFwQWN0aW9ucywgbWFwR2V0dGVyc30gZnJvbSAidnVleCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgICBuYW1lOiAiQnJhbmRQcm9maWxlIiwKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgdXJsOiAnJywKICAgICAgICAgICAgdXBsb2FkVmFsdWU6ICcnLAogICAgICAgICAgICBsb2dvVVJMOiAnJywKICAgICAgICAgICAgdXBsb2FkaW5nU3RhdHVzOiBmYWxzZQogICAgICAgIH0KICAgIH0sCiAgICBjb21wdXRlZDogewogICAgICAgIC4uLm1hcEdldHRlcnMoWyd1c2VyJywgJ2JyYW5kJywgJ2lzQnJhbmRMb2FkaW5nJ10pCiAgICB9LAogICAgdmFsaWRhdGlvbnM6IHsKICAgICAgICBicmFuZDogewogICAgICAgICAgICBicmFuZE5hbWU6IHtyZXF1aXJlZH0sCiAgICAgICAgICAgIGJyYW5kVGVsTnVtYmVyOiB7cmVxdWlyZWQsIG1heExlbmd0aDogbWF4TGVuZ3RoKDEwKSwgbWluTGVuZ3RoOiBtaW5MZW5ndGgoMTApfSwKICAgICAgICAgICAgYnJhbmRFbWFpbDoge3JlcXVpcmVkfSwKICAgICAgICAgICAgYnJhbmREZXNjcmlwdGlvbjoge3JlcXVpcmVkfSwKICAgICAgICB9CiAgICB9LAogICAgY3JlYXRlZCgpIHsKICAgICAgICB0aGlzLmdldEJyYW5kQnlJRCh0aGlzLnVzZXIudWlkKTsKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgLi4ubWFwQWN0aW9ucyhbJ2dldEJyYW5kRG9jUmVmZXJlbmNlQmVmb3JlU2F2ZScsICdzYXZlQnJhbmQnLCAnYWRkTWVzc2FnZScsICdnZXRCcmFuZEJ5SUQnXSksCiAgICAgICAgb25GaWxlQ2hhbmdlKGUpIHsKICAgICAgICAgICAgdGhpcy5icmFuZC5icmFuZExvZ28gPSBlLnRhcmdldC5maWxlc1swXTsKICAgICAgICAgICAgY29uc3QgZmlsZSA9IGUudGFyZ2V0LmZpbGVzWzBdOwogICAgICAgICAgICB0aGlzLnVybCA9IFVSTC5jcmVhdGVPYmplY3RVUkwoZmlsZSk7CiAgICAgICAgfSwKICAgICAgICBzYXZlQnJhbmRMb2NhbCgpIHsKICAgICAgICAgICAgdGhpcy51cGxvYWRpbmdTdGF0dXMgPSB0cnVlCiAgICAgICAgICAgIGNvbnN0IHRoYXQgPSB0aGlzOwogICAgICAgICAgICB0aGlzLmJyYW5kLm93bmVySUQgPSB0aGlzLnVzZXIudWlkCiAgICAgICAgICAgIHRoaXMuZ2V0QnJhbmREb2NSZWZlcmVuY2VCZWZvcmVTYXZlKCkudGhlbihyZXN1bHRzID0+IHsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdSRUYnLCByZXN1bHRzKTsKICAgICAgICAgICAgICAgIHRoYXQuYnJhbmQuZG9jSUQgPSByZXN1bHRzLmlkOwogICAgICAgICAgICAgICAgLy8gQ3JlYXRlIGEgcm9vdCByZWZlcmVuY2UKICAgICAgICAgICAgICAgIGNvbnN0IHVwbG9hZFRhc2sgPSBmaXJlYmFzZS5zdG9yYWdlKCkucmVmKHRoYXQuYnJhbmQuZG9jSUQgKyAnLycgKyAnbG9nby8nICsgdGhhdC5icmFuZC5icmFuZExvZ28ubmFtZSkKICAgICAgICAgICAgICAgICAgICAucHV0KHRoYXQuYnJhbmQuYnJhbmRMb2dvKTsKCiAgICAgICAgICAgICAgICB1cGxvYWRUYXNrLm9uKCdzdGF0ZV9jaGFuZ2VkJywgZnVuY3Rpb24gKHNuYXBzaG90KSB7CiAgICAgICAgICAgICAgICAgICAgLy8gT2JzZXJ2ZSBzdGF0ZSBjaGFuZ2UgZXZlbnRzIHN1Y2ggYXMgcHJvZ3Jlc3MsIHBhdXNlLCBhbmQgcmVzdW1lCiAgICAgICAgICAgICAgICAgICAgLy8gR2V0IHRhc2sgcHJvZ3Jlc3MsIGluY2x1ZGluZyB0aGUgbnVtYmVyIG9mIGJ5dGVzIHVwbG9hZGVkIGFuZCB0aGUgdG90YWwgbnVtYmVyIG9mIGJ5dGVzIHRvIGJlIHVwbG9hZGVkCiAgICAgICAgICAgICAgICAgICAgY29uc3QgcHJvZ3Jlc3MgPSAoc25hcHNob3QuYnl0ZXNUcmFuc2ZlcnJlZCAvIHNuYXBzaG90LnRvdGFsQnl0ZXMpICogMTAwOwogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdVcGxvYWQgaXMgJyArIHByb2dyZXNzICsgJyUgZG9uZScpOwogICAgICAgICAgICAgICAgICAgIHN3aXRjaCAoc25hcHNob3Quc3RhdGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgY2FzZSBmaXJlYmFzZS5zdG9yYWdlLlRhc2tTdGF0ZS5QQVVTRUQ6IC8vIG9yICdwYXVzZWQnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVXBsb2FkIGlzIHBhdXNlZCcpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgICAgIGNhc2UgZmlyZWJhc2Uuc3RvcmFnZS5UYXNrU3RhdGUuUlVOTklORzogLy8gb3IgJ3J1bm5pbmcnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnVXBsb2FkIGlzIHJ1bm5pbmcnKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sIGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgICAgICAgICAgIHRocm93IGVycm9yCiAgICAgICAgICAgICAgICAgICAgLy8gSGFuZGxlIHVuc3VjY2Vzc2Z1bCB1cGxvYWRzCiAgICAgICAgICAgICAgICB9LCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgLy8gSGFuZGxlIHN1Y2Nlc3NmdWwgdXBsb2FkcyBvbiBjb21wbGV0ZQogICAgICAgICAgICAgICAgICAgIC8vIEZvciBpbnN0YW5jZSwgZ2V0IHRoZSBkb3dubG9hZCBVUkw6IGh0dHBzOi8vZmlyZWJhc2VzdG9yYWdlLmdvb2dsZWFwaXMuY29tLy4uLgogICAgICAgICAgICAgICAgICAgIHVwbG9hZFRhc2suc25hcHNob3QucmVmLmdldERvd25sb2FkVVJMKCkudGhlbihkb3dubG9hZFVSTCA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdGaWxlIGF2YWlsYWJsZSBhdCcsIGRvd25sb2FkVVJMKTsKICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0JyYW5kJywgdGhhdC5icmFuZCk7CgogICAgICAgICAgICAgICAgICAgICAgICB0aGF0LmJyYW5kLmxvZ29VUkwgPSBkb3dubG9hZFVSTDsKICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC5zYXZlQnJhbmQodGhhdC5icmFuZCkudGhlbihyZXMgPT4gewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhhdC51cGxvYWRpbmdTdGF0dXMgPSBmYWxzZQoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBtZXNzYWdlX29iaiA9IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiAiQnJhbmQgU2F2ZWQgU3VjY2Vzc2Z1bGx5IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlQ2xhc3M6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBhdXRvQ2xvc2U6IHRydWUKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoYXQuYWRkTWVzc2FnZShtZXNzYWdlX29iaik7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["BrandProfile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"BrandProfile.vue","sourceRoot":"src/components/brand","sourcesContent":["<template>\n    <div class=\"row\">\n        <div v-if=\"isBrandLoading\" class=\"w-100\">\n            <grid-loader :loading=\"isBrandLoading\"></grid-loader>\n        </div>\n        <div v-if=\"!isBrandLoading\" class=\"col-md-6 offset-md-3 col-sm-10 offset-sm-1\">\n            <form id=\"register-form\" role=\"form\">\n                <h3 class=\"text-center\">Brand Details</h3>\n                <div class=\"form-group\">\n                    <label for=\"brandName\">Brand Name</label>\n                    <input type=\"text\" required=\"required\" name=\"brandName\" id=\"brandName\" class=\"form-control mb-3\"\n                           placeholder=\"Brand Name\"\n                           value=\"\"\n                           v-model=\"brand.brandName\">\n                    <div class=\"error text-danger\" v-if=\"!$v.brand.brandName.required\">Brand Name is required</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.brand.brandDescription.$error }\">\n                    <label for=\"brandDescription\">Brand Description </label>\n                    <input type=\"email\" required=\"required\" name=\"brandDescription\" id=\"brandDescription\"\n                           class=\"form-control mb-3\"\n                           placeholder=\"Brand Description\"\n                           value=\"\"\n                           v-model=\"brand.brandDescription\">\n                    <div class=\"error text-danger\" v-if=\"!$v.brand.brandDescription.required\">Brand Description is\n                        required\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <b-form-file\n                            v-model=\"brand.brandLogo\"\n                            :state=\"Boolean(brand.brandLogo)\"\n                            placeholder=\"Choose a file\"\n                            @change=\"onFileChange\"\n                    ></b-form-file>\n                    <div id=\"preview\" class=\"pt-5\">\n                        <img v-if=\"url || brand.logoURL\" :src=\"url || brand.logoURL\"/>\n                    </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.brand.brandTelNumber.$error }\">\n                    <label for=\"brandTelNumber\">Phone Number</label>\n                    <input type=\"number\" required=\"required\" name=\"brandTelNumber\" id=\"brandTelNumber\"\n                           class=\"form-control mb-3\"\n                           placeholder=\"Telephone Number\"\n                           value=\"\"\n                           v-model=\"brand.brandTelNumber\">\n                    <div class=\"error text-danger\" v-if=\"!$v.brand.brandTelNumber.required\">Phone Number is required\n                    </div>\n                </div>\n                <div class=\"form-group\">\n                    <label for=\"brandEmail\">Email</label>\n                    <input type=\"brandEmail\" required=\"required\" name=\"brandEmail\" id=\"brandEmail\"\n                           class=\"form-control mb-3\"\n                           placeholder=\"Email Address\"\n                           value=\"\"\n                           v-model=\"brand.brandEmail\">\n                    <div class=\"error text-danger\" v-if=\"!$v.brand.brandEmail.required\">Email Address is required</div>\n                    <div class=\"error text-danger\" v-if=\"!$v.brand.brandEmail\">Please enter a valid email address.\n                    </div>\n                </div>\n                <div v-if=\"!brand.brandID\" class=\"form-group\">\n                    <button class=\"btn btn-success\" style=\"width: 100%\" @click.prevent=\"saveBrandLocal\"\n                            :disabled=\"uploadingStatus\">\n                        <i v-if=\"uploadingStatus\" class=\"fa fa-spinner fa-spin\"/>\n                        Add\n                    </button>\n                </div>\n                <div v-if=\"brand.brandID\" class=\"form-group\">\n                    <button class=\"btn btn-success\" style=\"width: 100%\" @click.prevent=\"saveBrandLocal\"\n                            :disabled=\"uploadingStatus\">\n                        <i v-if=\"uploadingStatus\" class=\"fa fa-spinner fa-spin\"/>\n                        Update\n                    </button>\n                </div>\n            </form>\n        </div>\n    </div>\n</template>\n\n<script>\n    import {maxLength, minLength, required} from \"vuelidate/lib/validators\";\n    import * as firebase from \"firebase\";\n    import {mapActions, mapGetters} from \"vuex\";\n\n    export default {\n        name: \"BrandProfile\",\n        data() {\n            return {\n                url: '',\n                uploadValue: '',\n                logoURL: '',\n                uploadingStatus: false\n            }\n        },\n        computed: {\n            ...mapGetters(['user', 'brand', 'isBrandLoading'])\n        },\n        validations: {\n            brand: {\n                brandName: {required},\n                brandTelNumber: {required, maxLength: maxLength(10), minLength: minLength(10)},\n                brandEmail: {required},\n                brandDescription: {required},\n            }\n        },\n        created() {\n            this.getBrandByID(this.user.uid);\n        },\n        methods: {\n            ...mapActions(['getBrandDocReferenceBeforeSave', 'saveBrand', 'addMessage', 'getBrandByID']),\n            onFileChange(e) {\n                this.brand.brandLogo = e.target.files[0];\n                const file = e.target.files[0];\n                this.url = URL.createObjectURL(file);\n            },\n            saveBrandLocal() {\n                this.uploadingStatus = true\n                const that = this;\n                this.brand.ownerID = this.user.uid\n                this.getBrandDocReferenceBeforeSave().then(results => {\n                    console.log('REF', results);\n                    that.brand.docID = results.id;\n                    // Create a root reference\n                    const uploadTask = firebase.storage().ref(that.brand.docID + '/' + 'logo/' + that.brand.brandLogo.name)\n                        .put(that.brand.brandLogo);\n\n                    uploadTask.on('state_changed', function (snapshot) {\n                        // Observe state change events such as progress, pause, and resume\n                        // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\n                        const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                        console.log('Upload is ' + progress + '% done');\n                        switch (snapshot.state) {\n                            case firebase.storage.TaskState.PAUSED: // or 'paused'\n                                console.log('Upload is paused');\n                                break;\n                            case firebase.storage.TaskState.RUNNING: // or 'running'\n                                console.log('Upload is running');\n                                break;\n                        }\n                    }, function (error) {\n                        throw error\n                        // Handle unsuccessful uploads\n                    }, function () {\n                        // Handle successful uploads on complete\n                        // For instance, get the download URL: https://firebasestorage.googleapis.com/...\n                        uploadTask.snapshot.ref.getDownloadURL().then(downloadURL => {\n                            console.log('File available at', downloadURL);\n                            console.log('Brand', that.brand);\n\n                            that.brand.logoURL = downloadURL;\n                            that.saveBrand(that.brand).then(res => {\n                                console.log(res)\n                                that.uploadingStatus = false\n\n                                let message_obj = {\n                                    message: \"Brand Saved Successfully\",\n                                    messageClass: \"success\",\n                                    autoClose: true\n                                }\n                                that.addMessage(message_obj);\n                            })\n                        })\n                    });\n                })\n            }\n        }\n    }\n</script>\n\n<style scoped>\n    #preview {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n    }\n\n    #preview img {\n        max-width: 100%;\n        max-height: 500px;\n    }\n</style>\n"]}]}